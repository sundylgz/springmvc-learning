<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--  1. 组件扫描 -->
    <context:component-scan base-package="com.sundy.springmvc">

    </context:component-scan>

    <!--  2. 视图解析器

      工作机制:  prefix + 请求处理方法的返回值 + suffix  =  物理视图路径.
               /WEB-INF/views/success.jsp

     WEB-INF: 是服务器内部路径。 不能直接从浏览器端访问该路径下的资源. 但是可以内部转发进行访问

 -->


    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
        <!-- 配置视图解析器的优先级 -->
        <property name="order" value="1000"></property>
    </bean>

    <!-- 不经过Handler直接跳转页面 -->
    <mvc:view-controller path="testViewContorller" view-name="success"/>
    <!-- 使用了view-controlelr以后，会导致RequestMapping的映射失效，因此需要加上 annotation-driven的配置 -->
    <!-- 后面讲 -->
    <mvc:annotation-driven/>

    <mvc:default-servlet-handler/>
    <!--静态资源 设置缓存-->
    <!--<mvc:resources mapping="/scripts/**" location="/scripts/"/>-->
    <!--<mvc:resources mapping="/image/**" location="/image/"/>-->

    <!-- 配置文件的上传
       该bean的id值必须是 multipartResolver , 因为springmvc底层会通过该名字到容器中找对应的bean
     -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 保证与上传表单所在的Jsp页面的编码一致. -->
        <property name="defaultEncoding" value="utf-8"></property>
        <property name="maxUploadSize" value="10485760"></property>
    </bean>
    <!-- 配置拦截器 -->
    <!--<mvc:interceptors>-->
        <!--&lt;!&ndash;1. 拦截所有的请求 &ndash;&gt;-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<mvc:exclude-mapping path="/scripts/**"/>-->
            <!--<mvc:exclude-mapping path="/image/**"/>-->
            <!--<bean class="com.sundy.springmvc.interceptor.MyFirstInterceptor"></bean>-->
        <!--</mvc:interceptor>-->

        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<mvc:exclude-mapping path="/scripts/**"/>-->
            <!--<mvc:exclude-mapping path="/image/**"/>-->
            <!--<bean class="com.sundy.springmvc.interceptor.MySecondInterceptor"></bean>-->
        <!--</mvc:interceptor>-->

        <!--&lt;!&ndash; <ref bean="myFirstInterceptor"/> &ndash;&gt;-->
        <!--&lt;!&ndash; 2. 指定拦截 或者指定不拦截-->
            <!--<mvc:interceptor>-->
                <!--<mvc:mapping path="/emps"/>-->
                <!--<mvc:exclude-mapping path="/emps"/>-->
                    <!--<bean class="com.sundy.springmvc.interceptor.MyFirstInterceptor"></bean>-->
                <!--<ref bean="myFirstInterceptor"/>-->
            <!--</mvc:interceptor>-->
        <!--&ndash;&gt;-->
    <!--</mvc:interceptors>-->


</beans>